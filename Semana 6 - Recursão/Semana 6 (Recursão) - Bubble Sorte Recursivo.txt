#include <stdlib.h>
#include <stdio.h>
 
 
void bubble_sort_rec(int v[], int v_ord[], int t, int i, int swaped){
    
    if(i < t-1){
        if(v_ord[i] > v_ord[i+1]){
            int a = v_ord[i];
            v_ord[i] = v_ord[i+1];
            v_ord[i+1] = a;
            bubble_sort_rec(v, v_ord, t, ++i, 1); // houve troca
        }
        else
            bubble_sort_rec(v, v_ord, t, ++i, swaped); //passa swapped anterior pra frente
    }
    else{ //chegou no final mas só é ordenado se swapped = 0
        if(swaped)//volta pro inicio se swapped = 1
            bubble_sort_rec(v, v_ord, t, 0, 0);
    }
    
}
 
void bubble_sort(int v[], int v_ord[], int t){

    bubble_sort_rec(v, v_ord, t, 0, 0);
}
 
int main(){
  srand(1); //usa a semente padrão para o rand
  int N;
  scanf("%d", &N);
  
  int v[N], v_ord[N];
  for(int i=0; i < N; i++){
    v[i] = rand()%100; //gera um número aleatório entre 0 e 99
    v_ord[i] = v[i];
    //printf("Numero gerado%d\n",rand_num);
    
  }
  bubble_sort(v, v_ord, N);
  
  //imprimir
  for(int i=0; i < N; i++){
    printf("%d ", v[i]);
  }
  printf("\n");
  
  for(int i=0; i < N; i++){
    printf("%d ", v_ord[i]);
    
  }
  
}